{"version":3,"sources":["components/DiscreteSlider.js","App.js","components/UseInterval.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","DiscreteSlider","setSize","defaultValue","size","text","max","min","step","classes","className","Typography","id","gutterBottom","Slider","getAriaValueText","aria-labelledby","parseFloat","marks","valueLabelDisplay","Tank","left","top","diameter","height","style","Layout","leftA","topA","diameterA","heightA","heightDiff","length","diameterB","heightB","liquidHeightA","liquidHeightB","Exit","Transmission","Input","DrainingLiquid","FillingLiquid","a","App","useState","setDiameterA","setDiameterB","setLength","setLiquidHeightA","setLiquidHeightB","setHeightDiff","pipeDiameter","setPipeDiameter","count","setCount","pxToMeter","pipeDiameterMeters","diameterAMeters","diameterBMeters","liquidHeightAMeters","liquidHeightBMeters","heightDiffMeters","lengthMeters","velocity","Math","sqrt","velocityNew","dv","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","abs","reynolds","headLoss","log10","log","W","push","console","dh","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adf7893d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\n\nexport default function DiscreteSlider({setSize,size,defaultValue,text,max,min,step}) {\n  const classes = useStyles();\n  function valuetext(size) {\n    return setSize(size);\n  }\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        {text}\n      </Typography>\n      <Slider\n        defaultValue={defaultValue}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={parseFloat(step)}\n        marks\n        min={parseFloat(min)}\n        max={parseFloat(max)}\n        valueLabelDisplay=\"auto\"\n      />\n    </div>\n  );\n}\n","import './App.css';\nimport {useState,useEffect,useRef} from 'react';\nimport DiscreteSlider from './components/DiscreteSlider'\nimport useInterval from './components/UseInterval'\nimport W from 'lambert-w-function'\n\nfunction Tank({left,top,diameter,height}) {\n  return (\n    <>\n    <div className=\"verticalLine\"\n      style={{left:left,top:top,height:height}}/>\n    <div className=\"verticalLine\"\n      style={{left:`calc(${left} + ${diameter})`,top:top,height:height}}/>\n    <div className=\"horizontalLine\"\n      style={{left:left,width:diameter,top:`calc(${top} + ${height})`}} />\n    </>\n  )\n}\n\nfunction Layout({leftA,topA,diameterA,heightA,heightDiff,length,diameterB,heightB,liquidHeightA,liquidHeightB}){\n  function Exit(){\n    return(\n      <div className=\"verticalLine\"\n      style={{left:`calc(${leftA} + ${diameterA}/2)`,\n              top:`calc(${topA} + ${heightA})`,\n              height:`calc((${heightDiff}/2`}}\n      />\n    )\n  }\n\n  function Transmission(){\n    return(\n      <div className=\"horizontalLine\"\n      style={{left:`calc(${leftA} + ${diameterA}/2)`,\n              top:`calc(${topA} + ${heightA} + ${heightDiff}/2)`,\n              width: `calc(${length} - ${heightDiff})`}}\n      />\n    )\n  }\n\n  function Input(){\n    return(\n      <div className=\"verticalLine\"\n      style={{left:`calc(${leftA} + ${diameterA}/2 + ${length} - ${heightDiff})`,\n              top:`calc(${topA} + ${heightA} + ${heightDiff}/2)`,\n              height:`calc(${heightDiff}/2)`}}\n      />\n    )\n  }\n\n  function DrainingLiquid(){\n    return(\n      <div className=\"liquid\"\n      style={{left:leftA,\n              top:`calc(${topA} + ${heightA} - ${liquidHeightA})`,\n              height:liquidHeightA,\n              width:diameterA\n            }}\n      />\n    )\n  }\n\n  function FillingLiquid(){\n    return(\n      <div className=\"liquid\"\n      style={{left:`calc(${leftA} + ${diameterA}/2 + ${length} - ${heightDiff} - ${diameterB}/2)`,\n              top:`calc(-${liquidHeightB} + ${heightB} + ${topA} +  ${heightA} + ${heightDiff})`,\n              height:liquidHeightB,\n              width:diameterB\n            }}\n      />\n    )\n  }\n\n  return(\n    <>\n    <Tank left={leftA} top={topA} diameter={diameterA} height={heightA}/>\n    <Exit/>\n    <Transmission/>\n    <Input/>\n    <Tank left={`calc(${leftA} + ${diameterA}/2 + ${length} - ${heightDiff} - ${diameterB}/2)`}\n          top={`calc(${topA} + ${heightA} + ${heightDiff})`}\n          diameter={diameterB}\n          height={heightB}\n    />\n    <DrainingLiquid/>\n    <FillingLiquid/>\n    </>\n  )\n}\n\nlet a = []\n\nfunction App() {\n  let [diameterA,setDiameterA] = useState(0);\n  let [diameterB,setDiameterB] = useState(0);\n  let [length,setLength] = useState(0);\n  let [liquidHeightA,setLiquidHeightA] = useState(150);\n  let [liquidHeightB,setLiquidHeightB] = useState(0);\n  let [heightDiff,setHeightDiff] = useState(0);\n  let [pipeDiameter,setPipeDiameter] = useState(0);\n  let [count,setCount] = useState(0);\n  const pxToMeter = 1/100\n  const viscosity = 1e-3;\n  const density = 1e3;\n  const gravity = 9.8;\n  const dt = 1;\n  let pipeDiameterMeters = pipeDiameter*pxToMeter;\n  let diameterAMeters = diameterA*pxToMeter;\n  let diameterBMeters = diameterB*pxToMeter;\n  let liquidHeightAMeters = liquidHeightA*pxToMeter;\n  let liquidHeightBMeters = liquidHeightB*pxToMeter;\n  let heightDiffMeters = heightDiff*pxToMeter;\n  let lengthMeters = length*pxToMeter\n  let velocity = Math.sqrt(2*gravity*liquidHeightAMeters);\n  let velocityNew = 2*velocity;\n  let dv = 1;\n\n  useInterval(() => {\n    while(Math.abs(dv) > 0.01){\n      let reynolds = velocity*density*pipeDiameterMeters/viscosity\n      let frictionFactor\n      if (reynolds < 2100) {\n        frictionFactor = 64/reynolds\n      } else {\n        frictionFactor = 1/((-2*Math.log10(10**(-1/Math.log(10)*W(reynolds*Math.log(10)/5.02))))**2)\n      }\n      let headLoss = frictionFactor*velocity**2/(2*gravity)*lengthMeters/pipeDiameterMeters\n      if (liquidHeightAMeters+heightDiffMeters>headLoss){\n        velocityNew = Math.sqrt(2*gravity*(liquidHeightAMeters+heightDiffMeters-headLoss)/(1-(pipeDiameterMeters/diameterAMeters)**4))\n      } else{\n        velocityNew = velocity/2\n      }\n      dv = velocity - velocityNew;\n      velocity = velocityNew\n    }\n    setCount(count+1);\n    a.push(velocity);\n    if (count == 200){\n      console.log(a);\n    }\n    let dh = dt*velocity*(pipeDiameterMeters/diameterAMeters)**2\n    liquidHeightAMeters -= dh;\n    liquidHeightBMeters += dh*(diameterAMeters/diameterBMeters)**2;\n    setLiquidHeightA(liquidHeightAMeters/pxToMeter);\n    setLiquidHeightB(liquidHeightBMeters/pxToMeter);\n  }, 100);\n\n  return (\n    <>\n    <DiscreteSlider setSize={setDiameterA} size={diameterA} defaultValue=\"250\" text=\"Draining tak diameter\" min=\"50\" max=\"500\" step=\"10\"/>\n    <DiscreteSlider setSize={setDiameterB} size={diameterB} defaultValue=\"250\" text=\"Filling tak diameter\" min=\"50\" max=\"500\" step=\"10\"/>\n    <DiscreteSlider setSize={setLength} size={length} defaultValue=\"750\" text=\"Pipe length\" min=\"50\" max=\"750\" step=\"10\"/>\n    <DiscreteSlider setSize={setHeightDiff} size={heightDiff} defaultValue=\"200\" text=\"Height difference\" min=\"0\" max=\"500\" step=\"10\"/>\n    <DiscreteSlider setSize={setPipeDiameter} size={pipeDiameter} defaultValue=\"2.5\" text=\"Pipe diameter\" min=\"0.1\" max=\"5\" step=\"0.1\"/>\n\n\n    <Layout leftA=\"350px\" topA=\"100px\"\n            diameterA={diameterA+\"px\"} heightA=\"250px\"\n            diameterB={diameterB+\"px\"} heightB=\"200px\"\n            heightDiff={heightDiff+\"px\"} length={length+\"px\"}\n            liquidHeightA={liquidHeightA+\"px\"}\n            liquidHeightB={liquidHeightB+\"px\"}\n            />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}