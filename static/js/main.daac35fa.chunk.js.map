{"version":3,"sources":["components/DiscreteSlider.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","DiscreteSlider","setSize","defaultValue","size","text","max","min","step","classes","className","Typography","id","gutterBottom","Slider","getAriaValueText","aria-labelledby","parseFloat","marks","valueLabelDisplay","Tank","left","top","diameter","height","style","Layout","leftA","topA","diameterA","heightA","heightDiff","length","diameterB","heightB","liquidHeightA","liquidHeightB","Exit","Transmission","Input","DrainingLiquid","FillingLiquid","position","Math","round","PI","App","Chart","register","registerables","useState","setDiameterA","setDiameterB","setLength","setLiquidHeightA","setLiquidHeightB","setHeightDiff","pipeDiameter","setPipeDiameter","count","setCount","time","setTime","chartRef","React","createRef","newChart","setNewChart","myChartRef","useEffect","current","getContext","type","options","scales","x","title","display","y","data","datasets","label","backgroundColor","dv","pxToMeter","pipeDiameterMeters","diameterAMeters","diameterBMeters","liquidHeightAMeters","liquidHeightBMeters","heightDiffMeters","lengthMeters","useInterval","velocity","sqrt","velocityNew","abs","reynolds","headLoss","log10","log","W","dh","push","update","Button","onClick","variant","color","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daac35fa.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\n\nexport default function DiscreteSlider({setSize,size,defaultValue,text,max,min,step}) {\n  const classes = useStyles();\n  function valuetext(size) {\n    return setSize(size);\n  }\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        {text}\n      </Typography>\n      <Slider className=\"slider\"\n        defaultValue={defaultValue}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={parseFloat(step)}\n        marks\n        min={parseFloat(min)}\n        max={parseFloat(max)}\n        valueLabelDisplay=\"on\"\n      />\n    </div>\n  );\n}\n","import './App.css';\nimport {useState,useEffect,useRef} from 'react';\nimport DiscreteSlider from './components/DiscreteSlider'\nimport useInterval from '@use-it/interval';\nimport W from 'lambert-w-function'\nimport Button from '@material-ui/core/Button';\nimport { Chart, registerables } from 'chart.js';\nimport React, { Component } from 'react'\n\nfunction Tank({left,top,diameter,height}) {\n  return (\n    <>\n    <div className=\"verticalLine\"\n      style={{left:left,top:top,height:height}}/>\n    <div className=\"verticalLine\"\n      style={{left:`calc(${left} + ${diameter})`,top:top,height:height}}/>\n    <div className=\"horizontalLine\"\n      style={{left:left,width:diameter,top:`calc(${top} + ${height})`}} />\n    </>\n  )\n}\n\nfunction Layout({leftA,topA,diameterA,heightA,heightDiff,length,diameterB,heightB,liquidHeightA,liquidHeightB}){\n  function Exit(){\n    return(\n      <div className=\"verticalLine\"\n      style={{left:`calc(${leftA} + ${diameterA}/2)`,\n              top:`calc(${topA} + ${heightA})`,\n              height:`calc((${heightDiff}/2`}}\n      />\n    )\n  }\n\n  function Transmission(){\n    return(\n      <div className=\"horizontalLine\"\n      style={{left:`calc(${leftA} + ${diameterA}/2)`,\n              top:`calc(${topA} + ${heightA} + ${heightDiff}/2)`,\n              width: `calc(${length} - ${heightDiff})`}}\n      />\n    )\n  }\n\n  function Input(){\n    return(\n      <div className=\"verticalLine\"\n      style={{left:`calc(${leftA} + ${diameterA}/2 + ${length} - ${heightDiff})`,\n              top:`calc(${topA} + ${heightA} + ${heightDiff}/2)`,\n              height:`calc(${heightDiff}/2)`}}\n      />\n    )\n  }\n\n  function DrainingLiquid(){\n    return(\n      <div className=\"liquid\"\n      style={{left:leftA,\n              top:`calc(${topA} + ${heightA} - ${liquidHeightA})`,\n              height:liquidHeightA,\n              width:diameterA\n            }}\n      />\n    )\n  }\n\n  function FillingLiquid(){\n    return(\n      <div className=\"liquid\"\n      style={{left:`calc(${leftA} + ${diameterA}/2 + ${length} - ${heightDiff} - ${diameterB}/2)`,\n              top:`calc(-${liquidHeightB} + ${heightB} + ${topA} +  ${heightA} + ${heightDiff})`,\n              height:liquidHeightB,\n              width:diameterB\n            }}\n      />\n    )\n  }\n\n  return(\n    <>\n    <div id=\"volumeScore\" style={{position: \"absolute\", left:`calc(${leftA} + ${diameterA}/2)`,\n    top:topA\n    }}>\n    V = {Math.round(parseFloat(diameterA)**2/4*parseFloat(liquidHeightA)*Math.PI)/1e6 + \" m3\"}\n    </div>\n    <Tank left={leftA} top={topA} diameter={diameterA} height={heightA}/>\n    <Exit/>\n    <Transmission/>\n    <Input/>\n    <Tank left={`calc(${leftA} + ${diameterA}/2 + ${length} - ${heightDiff} - ${diameterB}/2)`}\n          top={`calc(${topA} + ${heightA} + ${heightDiff})`}\n          diameter={diameterB}\n          height={heightB}\n    />\n    <DrainingLiquid/>\n    <FillingLiquid/>\n    </>\n  )\n}\n\nfunction App() {\n  Chart.register(...registerables);\n  let [diameterA,setDiameterA] = useState(0);\n  let [diameterB,setDiameterB] = useState(0);\n  let [length,setLength] = useState(0);\n  let [liquidHeightA,setLiquidHeightA] = useState(150);\n  let [liquidHeightB,setLiquidHeightB] = useState(0);\n  let [heightDiff,setHeightDiff] = useState(0);\n  let [pipeDiameter,setPipeDiameter] = useState(0);\n  let [count,setCount] = useState(0);\n  let [time,setTime] = useState(0);\n  const chartRef = React.createRef();\n  let [newChart,setNewChart] = useState(React.createRef());\n  let [myChartRef,setMyChartRef] = useState(0);\n  useEffect(() => {\n    myChartRef = chartRef.current.getContext(\"2d\");\n    setNewChart(new Chart(myChartRef,{\n            type: 'scatter',\n            options: {\n              scales: {\n                x: {\n                  title: {\n                    display: true,\n                    text: 'Time (s)'\n                  }\n                },\n                y: {\n                  title: {\n                    display: true,\n                    text: 'Height (cm)'\n                  }\n                },\n              }\n            },\n            data: {\n              datasets: [{\n                label: 'Height versus time',\n                data: [],\n                backgroundColor: 'rgb(255, 99, 132)'\n              }],\n            }\n        }));\n  },[])\n\n  const pxToMeter = 1/100\n  const viscosity = 1e-3;\n  const density = 1e3;\n  const gravity = 9.8;\n  const dt = 5;\n  let pipeDiameterMeters = pipeDiameter*pxToMeter;\n  let diameterAMeters = diameterA*pxToMeter;\n  let diameterBMeters = diameterB*pxToMeter;\n  let liquidHeightAMeters = liquidHeightA*pxToMeter;\n  let liquidHeightBMeters = liquidHeightB*pxToMeter;\n  let heightDiffMeters = heightDiff*pxToMeter;\n  let lengthMeters = length*pxToMeter\n  let dv;\n  function InitiateCount(){\n    setCount(1);\n  }\n  useInterval(() => {\n    if (count > 0){\n      let velocity = Math.sqrt(2*gravity*liquidHeightAMeters);\n      let velocityNew = 2*velocity;\n      dv = 1;\n      while(Math.abs(dv) > 0.001){\n        let reynolds = velocity*density*pipeDiameterMeters/viscosity\n        let frictionFactor\n        if (reynolds < 2100) {\n          frictionFactor = 64/reynolds\n        } else {\n          frictionFactor = 1/((-2*Math.log10(10**(-1/Math.log(10)*W(reynolds*Math.log(10)/5.02))))**2)\n        }\n        let headLoss = frictionFactor*velocity**2/(2*gravity)*lengthMeters/pipeDiameterMeters\n        if (liquidHeightAMeters+heightDiffMeters>headLoss){\n          velocityNew = Math.sqrt(2*gravity*(liquidHeightAMeters+heightDiffMeters-headLoss)/(1-(pipeDiameterMeters/diameterAMeters)**4))\n        } else{\n          velocityNew = velocity*0.75\n        }\n        dv = velocity - velocityNew;\n        velocity = velocityNew\n      }\n      setTime(time+dt);\n      let dh = dt*velocity*(pipeDiameterMeters/diameterAMeters)**2\n      liquidHeightAMeters -= dh;\n      liquidHeightBMeters += dh*(diameterAMeters/diameterBMeters)**2;\n      newChart.data.datasets[0].data.push({x:time,y:liquidHeightAMeters});\n      newChart.update();\n      setLiquidHeightA(liquidHeightAMeters/pxToMeter);\n      setLiquidHeightB(liquidHeightBMeters/pxToMeter);\n    }}, 100);\n\n  return (\n    <>\n    <Button id=\"runButton\" onClick={InitiateCount} variant=\"contained\" color=\"primary\">\n          Run simulation\n    </Button>\n    <div id=\"sliderWrapper\">\n    <DiscreteSlider setSize={setDiameterA} size={diameterA} defaultValue=\"250\" text=\"Draining tank diameter (cm)\" min=\"50\" max=\"500\" step=\"10\"/>\n    <DiscreteSlider setSize={setDiameterB} size={diameterB} defaultValue=\"250\" text=\"Filling tank diameter (cm)\" min=\"50\" max=\"500\" step=\"10\"/>\n    <DiscreteSlider setSize={setLength} size={length} defaultValue=\"750\" text=\"Pipe length (cm)\" min=\"50\" max=\"750\" step=\"10\"/>\n    <DiscreteSlider setSize={setHeightDiff} size={heightDiff} defaultValue=\"200\" text=\"Height difference (cm)\" min=\"0\" max=\"500\" step=\"10\"/>\n    <DiscreteSlider setSize={setPipeDiameter} size={pipeDiameter} defaultValue=\"2.5\" text=\"Pipe diameter (cm)\" min=\"0.1\" max=\"3\" step=\"0.1\"/>\n    </div>\n    <Layout leftA=\"350px\" topA=\"100px\"\n            diameterA={diameterA+\"px\"} heightA=\"250px\"\n            diameterB={diameterB+\"px\"} heightB=\"200px\"\n            heightDiff={heightDiff+\"px\"} length={length+\"px\"}\n            liquidHeightA={liquidHeightA+\"px\"}\n            liquidHeightB={liquidHeightB+\"px\"}\n            />\n    <canvas id=\"myChart\" ref={chartRef}></canvas>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}